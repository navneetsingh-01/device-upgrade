---
- name: Save running config before starting
  ios_config:
    save_when: always

- name: host
  debug: msg="{{ ansible_net_memfree_mb }}"
  poll: 0
# - name: Enable scp server
#   cisco.ios.ios_config:
#     lines: ip scp server enable
#     save_when: never
#   ignore_errors: true

# - name: Device primary volume name
#   ios_command:
#     commands:
#       - "dir"
#   register: dir_output

# - block:
#     - name: Determine if primary volume name is bootflash
#       set_fact: device_primary_flash="bootflash"
#       when: dir_output['stdout'][0][:40].find(' bootflash:') != -1

#     - name: Determine if primary volume name is flash
#       set_fact: device_primary_flash="flash"
#       when: dir_output['stdout'][0][:40].find(' flash:') != -1

#     - name: Determine if primary volume name is flash-1
#       set_fact: device_primary_flash="flash-1"
#       when: dir_output['stdout'][0][:40].find(' flash-1:') != -1

# - name: debug primary flash name
#   debug: msg="{{ device_primary_flash }}"
#   poll: 0
#   when: device_primary_flash is defined

# - name: Device secondary volume name
#   ios_command:
#     commands:
#       - "show file systems"
#   register: file_systems_output

# - block:
#     - name: Determine if secondary volume name is stby-bootflash
#       set_fact: device_secondary_flash="stby-bootflash"
#       when: file_systems_output['stdout'][0].find(' stby-bootflash:') != -1

#     - name: Determine if secondary volume name is slavebootflash
#       set_fact: device_secondary_flash="slavebootflash"
#       when: file_systems_output['stdout'][0].find(' slavebootflash:') != -1

#     - name: Determine if secondary volume name is flash-2
#       set_fact: device_secondary_flash="flash-2"
#       when: file_systems_output['stdout'][0].find(' flash-2:') != -1

# - name: debug secondary flash
#   debug: msg="{{ device_secondary_flash }}"
#   poll: 0
#   when: device_secondary_flash is defined

# - name: Removing inactive software images
#   cli_command:
#     command: "install remove inactive"
#     check_all: True
#     prompt:
#       - "Do you want to remove the above files"
#     answer:
#       - "y"

# - name: Remote copy of IOS image to primary flash
#   ios_command:
#     commands:
#       - command: "copy scp://{{ rsync_u }}:{{ rsync_p }}@{{ rsync_host }}/rsynced_data/IOS/{{ image.ios.os_dst_filename }} {{ device_primary_flash }}:/"
#         prompt: "Destination filename"
#         answer: "\r"
#   vars:
#     ansible_command_timeout: 10800
#   register: output

# - name: Copy IOS image from primary to secondary flash
#   cli_command:
#     command: "copy {{ device_primary_flash }}:/{{ image.ios.os_dst_filename }} {{ device_secondary_flash }}:/"
#     check_all: True
#     prompt:
#       - "Destination filename"
#       - "Do you want to"
#     answer:
#       - "{{ image.ios.os_dst_filename }}"
#       - "y"

# - name: Get md5 of IOS file in secondary flash
#   ios_command:
#     commands:
#       - "verify /md5 {{ device_secondary_flash }}:/{{ image.ios.os_dst_filename }}"
#   register: output

# - name: Assert that MD5 of secondary flash IOS file Is Correct
#   assert:
#     that:
#       - image.ios.os_md5 == "{{ output['stdout'][0].split('=')[-1] | replace(' ', '') }}"
