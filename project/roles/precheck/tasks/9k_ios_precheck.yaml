---
- block:
    - name: Gather facts to check version IOS
      ios_facts:
        gather_subset:
          - min
          - hardware
      register: output

    - name: Show installed boot image version
      debug: msg="{{ ansible_net_image }}"
      when: output is defined

    - name: Assert That It is Running The Desired boot Image
      assert:
        that:
          - "'{{ image.ios.os_dst_filename }}' not in '{{ ansible_net_image }}'"
        success_msg: Device not running target image.
        fail_msg: Device is already running target image.
      ignore_errors: true

    - name: Gather CPU usage and free memory
      ios_command:
        commands:
          - "show processes cpu"
      register: output

    - name: Assert that IOS device can be upgraded
      assert:
        that:
          - '"ios" == "{{ ansible_net_system }}"'
          - 1000 < "{{ ansible_net_memfree_mb | default('1001') }}" | int
        success_msg: Device is in healthy state.
        fail_msg: Device should be manually verified.
      when: ansible_net_memfree_mb is defined

    - assert:
        that:
          - 85 > "{{ item.split()[-1] | replace('%', '') }}" | int
        success_msg: Device is in healthy state.
        fail_msg: Device should be manually verified.
      loop: "{{ output['stdout'][0].split('\n') }}"
      when: "'five minutes:' in item"

    - name: Creates directory
      file:
        path: 'prechecks/{{ inventory_hostname }}'
        state: directory
      when: output is defined
      run_once: true

    - name: Remove existing file if it exists
      file:
        path: 'precheck_{{ inventory_hostname }}.txt'
        state: absent
      when: output is defined

    - name: Creates file
      file:
        path: 'precheck_{{ inventory_hostname }}.txt'
        state: touch
      when: output is defined

    - name: IOS run commands and capture
      include_role:
        name: command_capture
      vars:
        command: "{{ item.cmd }}"
        file_name: "{{ item.file }}"
        device_type: ios
        check_type: pre
      loop: "{{ check_commands.ios }}"